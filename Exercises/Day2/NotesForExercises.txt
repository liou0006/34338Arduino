5a
Serial.available checks the serial port if there is bytes available to read from

If the condition is true, the code reads the incoming byte and stores it in incomingByte variable

And lastly prints it out what has been read from the byte from the serial port.

5d
incomingByte is defined as an integer therefor I will receive it in terms of numbers.
I suppose it might be in terms of ASCII numbers or decimal numbers stated at the end of Serial.println where where it writes: DEC

5e
If we set it to "new line" instead of "no line ending" we receive other set of numbers than previously and always end with "I received: 10" before.
The end could be because it states it is in decimal numbers or the decimal number of the NULL

5f
we receive the character what we wrote because we forced the type of incomingByte to char type.

6a
char is a data type. it is used to store either individual characters or is a building block for a string

6b
The result of mychar is:
D

The code it stores and converts character to integer numbers in terms of ASCII equivalence, and integer back to ASCII number equivalence and therefor it becomes D because the it is the equivalence of '68' in ASCII character which 

7a 
RBG value is way of representing the colors Red, Green and blue. These 3 are primary colors which with different combinations can create all the "needed" colors for Digital displays. 
Depending on the intensity of each color, the final color changes. The intensity can vary from 0 to 255 which is what can be represented with 8 bits. 

7b 
The functions reads from the serial buffer and then converts into an integer. more numbers are seperated in the function, by either  comma space or newline 


